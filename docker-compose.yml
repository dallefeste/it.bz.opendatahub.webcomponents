version: "3.4"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/dockerfile-node-local
    volumes:
      - ./frontend/:/code
    working_dir: /code
    env_file: .env
    command: sh -c "test -d node_modules || yarn; yarn dev"
    environment:
      HOST: 0.0.0.0   # Make all IP addresses available to the outside
    depends_on:
        - api
        - cdn
    ports:
      - "8999:3000"
    tty: true

  api:
      container_name: wcstore_api
      build:
        context: backend
        dockerfile: data-service/infrastructure/docker/Lockerfile
      volumes:
      #   - ./:/code
      #   - ./.m2:/code/.m2
        - ./workspace:/workspace
      env_file:
        - .env
      # environment:
      #   MAVEN_CONFIG: /code/.m2
      # working_dir: /code
      # user: "1000"    # id of your local development user
          
      depends_on:
        - postgres
      ports:
        - "${API_SERVER_PORT}:${API_SERVER_PORT}"
      tty: true

  cdn:
    container_name: wcstore_cdn
    build:
      context: backend
      dockerfile: delivery-service/infrastructure/docker/Lockerfile
    volumes:
    #   - ./backend:/code
    #   - ./backend/.m2:/code/.m2
      - ./workspace:/workspace
    env_file:
      - .env
    # environment:
    #   MAVEN_CONFIG: /code/.m2
    # working_dir: /code
    # user: "1000"    # id of your local development user
    # command:
    #   - |
    #     mvn install -Duser.home=/code
    #     cd delivery-service
    #     mvn spring-boot:run -B -Dspring-boot.run.profiles=dev -Duser.home=/code
    depends_on:
      - postgres
    ports:
      - "${CDN_SERVER_PORT}:${CDN_SERVER_PORT}"
    tty: true

  postgres:
    container_name: wcstore_postgres
    image: postgres:13
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: wcs
      POSTGRES_PASSWORD: wcs
      POSTGRES_DB: wcs
    volumes:
      - wcs_pgdata:/var/lib/postgresql/data

#   # Testing mail forms
#   # mailhog:
#   #   container_name: wcstore_mail
#   #   image: mailhog/mailhog
#   #   ports:
#   #     - "1025:1025" #SMTP port
#   #     - "8025:8025" #Web frontend

volumes:
  wcs_pgdata: