server.port = ${CRAWLER_SERVER_PORT:9010}

spring.application.name = webcompstore-crawler

# Database configuration
spring.datasource.url = ${DB_URL:jdbc:postgresql://wcstore_postgres/wcs}
spring.datasource.username = ${DB_USR:wcs}
spring.datasource.password = ${DB_PWD:wcs}
spring.jpa.properties.hibernate.defaultSchema = ${DB_SCHEMA:public}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.hibernate.naming.physical-strategy = it.bz.opendatahub.webcomponents.common.hibernate.CamelSnakeNamingStrategy
spring.flyway.baselineOnMigrate = true
spring.jmx.enabled = false

# Debug levels
logging.level.org.slf4j = ${DEBUG_LEVEL:DEBUG}
logging.level.it.bz.opendatahub.webcomponents = ${DEBUG_LEVEL:DEBUG}
logging.level.liquibase.executor = INFO

# Path to the local file system where the crawler or api will store the "dist" files.
application.workspace.path = ${WORKSPACE_PATH:workspace}

# Scheduler intervals to trigger various downloads
application.schedule.origin = 300000
application.schedule.component = 300000
application.schedule.spdx = 86400000


### ORIGINS
# A origin.json file repository, where we get all included web components

# Github token to bypass the 60 calls/hour limit
application.repository.github.token = ${ORIGIN_TOKEN:}

# Repository where the list for web components can be found. Must use https, not ssh!
application.repository.origin.url = ${ORIGIN_URL:https://github.com/noi-techpark/odh-web-components-store-demo-origins.git}
application.repository.origin.branch = ${ORIGIN_BRANCH:development}
