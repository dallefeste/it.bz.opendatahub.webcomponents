name: CI/CD delivery-service (cdn)

on: 
  push:
    paths-ignore:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    paths-ignore:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

env:
  PROJECT_NAME: odh-webcompstore-api
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.repository.name }}-app
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '8'

jobs:
  test:
    runs-on: ubuntu-20.04        
    steps:
      - uses: actions/checkout@v2
      - name: Test backend
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          test-command: 'mvn -B -U clean test'
          working-directory: backend


  deploy-test:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-${{ github.ref }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        env:
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_CDN_SERVER_PORT: "1201"

          X_DEBUG_LEVEL: "INFO"
          X_WORKSPACE_PATH: "/workspace"

          X_DB_URL: "jdbc:postgresql://test-pg-bdp.co90ybcr8iim.eu-west-1.rds.amazonaws.com:5432/webcompstore"
          X_DB_USR: ${{ secrets.DB_USR }}
          X_DB_PWD: ${{ secrets.DB_PWD }}
          X_DB_SCHEMA: "public"

          X_DOCKER_CLIENT_TIMEOUT: 180
          X_COMPOSE_HTTP_TIMEOUT: 180

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests package'
          working-directory: backend


      - name: Build images
        run: docker-compose --ansi never -f ./backend/infrastructure/docker/docker-compose.build.yml build --pull

      - name: Build and push images of CDN
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./backend/infrastructure/docker/
          docker-compose-file: docker-compose.buildcdn.yml

      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}
          working-directory: ./backend/infrastructure/ansible